version: "3.8"

volumes:
  mysql:
  stan:

services:

  mysql:
    image: "mysql:5.7" # We're using 5.7.
    container_name: mono_mysql
    restart: always
    ports:
      - "${mono_mysql_addr_port:-0}:3306"
    volumes:
      - "mysql:/var/lib/mysql"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

  nats:
    image: "nats:2.1.4" # This is the latest version at the moment.
    container_name: mono_nats
    restart: always
    ports:
      - "${mono_nats_addr_port:-0}:4222"

  stan:
    image: "nats-streaming:0.17.0" # This is the latest version at the moment.
    container_name: mono_stan
    restart: always
    volumes:
      - "stan:/data"
    command:
      - "--cluster_id=local"
      - "--max_channels=0"
      - "--max_subs=0"
      - "--max_msgs=0"
      - "--max_bytes=0"
      - "--max_age=0s"
      - "--max_inactivity=0s"
      - "--nats_server=nats://nats:4222"
      - "--hb_interval=1s"
      - "--hb_timeout=1s"
      - "--hb_fail_count=3"
      - "--store=FILE"
      - "--dir=/data"
      - "--file_fds_limit=4000"

  mono:
    build:
      context: .
      dockerfile: use `./scripts/build` instead of `docker-compose build`
    image: "go-monolith-example:latest"
    container_name: mono_mono
    restart: always
    ports:
      - "${MONO_ADDR_PORT:-0}:17000"
      - "${MONO_AUTH_ADDR_PORT:-0}:17003"
      - "${MONO_AUTH_ADDR_PORT_INT:-0}:17004"
      - "${MONO_AUTH_METRICS_ADDR_PORT:-0}:17005"
      - "${MONO_EXAMPLE_ADDR_PORT:-0}:17001"
      - "${MONO_EXAMPLE_METRICS_ADDR_PORT:-0}:17002"
    environment:
      MONO_X_MYSQL_ADDR_HOST: "mysql"
      MONO_X_NATS_ADDR_URLS: "nats://nats:4222"
      MONO_X_STAN_CLUSTER_ID: "local"
      MONO__EXAMPLE_MYSQL_AUTH_LOGIN: "root"
      MONO__EXAMPLE_MYSQL_AUTH_PASS: ""
      MONO__AUTH_SECRET: "s3cr3t"
